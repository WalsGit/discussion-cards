{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@walsgit/flarum-discussion-cards/webpack/bootstrap","webpack://@walsgit/flarum-discussion-cards/webpack/runtime/compat get default export","webpack://@walsgit/flarum-discussion-cards/webpack/runtime/define property getters","webpack://@walsgit/flarum-discussion-cards/webpack/runtime/hasOwnProperty shorthand","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['app']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['extend']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['forum/components/DiscussionList']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['common/components/Placeholder']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['common/components/Button']\"","webpack://@walsgit/flarum-discussion-cards/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@walsgit/flarum-discussion-cards/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['common/Component']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@walsgit/flarum-discussion-cards/./src/forum/utils/craftBadges.js","webpack://@walsgit/flarum-discussion-cards/./src/forum/helpers/isValideImageUrl.js","webpack://@walsgit/flarum-discussion-cards/./src/forum/helpers/getPostImage.js","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['common/components/Link']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['tags/utils/sortTags']\"","webpack://@walsgit/flarum-discussion-cards/./src/forum/utils/craftTags.js","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['common/utils/humanTime']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['common/utils/string']\"","webpack://@walsgit/flarum-discussion-cards/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@walsgit/flarum-discussion-cards/./src/forum/components/LastReplies.js","webpack://@walsgit/flarum-discussion-cards/./src/forum/helpers/compareTags.js","webpack://@walsgit/flarum-discussion-cards/./src/forum/components/CardItem.js","webpack://@walsgit/flarum-discussion-cards/./src/forum/components/ListItem.js","webpack://@walsgit/flarum-discussion-cards/./src/forum/compat.js","webpack://@walsgit/flarum-discussion-cards/external assign \"flarum.core\"","webpack://@walsgit/flarum-discussion-cards/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Placeholder'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import icon from 'flarum/common/helpers/icon';\r\nimport Tooltip from 'flarum/common/components/Tooltip';\r\n\r\nexport default function craftBadges(badges) {\r\n  if (badges.length) {\r\n    return [m('.cardBadges', [badges.map((badge) => {\r\n      return [\r\n        m(Tooltip, {\r\n          text: badge.attrs.label[0],\r\n          position: 'right'\r\n        },\r\n        m('span.cardBadge.Badge.Badge--' + badge.attrs.type, [icon(badge.attrs.icon)]))]\r\n    })])];\r\n  }\r\n};\r\n","export default function isValideImageUrl (url) {\r\n    if(typeof url !== 'string') return false;\r\n    \r\n    const imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'webp', 'bmp', 'svg'];\r\n\r\n    if (!url.startsWith('http://') && !url.startsWith('https://')) {\r\n        url = 'http://' + url;\r\n    }\r\n\r\n    let parsedUrl;\r\n    try {\r\n        parsedUrl = new URL(url);\r\n    } catch {\r\n        return false;\r\n    }\r\n\r\n    const extension = parsedUrl.pathname.split('.').pop().toLowerCase();\r\n    return imageExtensions.includes(extension);\r\n}","import isValideImageUrl from \"./isValideImageUrl\";\r\n\r\nexport default function getPostImage(post, image, isblogPost = false, key = 1) {\r\n\r\n  const regex = /<img(?!.*?class=\"emoji\").*?src=[\\'\"](.*?)[\\'\"].*?>/;\r\n\r\n  if(isblogPost && isValideImageUrl(image)) {\r\n    return image;\r\n  }\r\n\r\n  const assetImage = app.forum.attribute(\"baseUrl\") + \"/assets/\" + image;\r\n\r\n  if (post) {\r\n    const src = regex.exec(post.contentHtml());\r\n    if (typeof key === \"number\" && key > 0) {\r\n      return (src) ? src[key] : (image ? assetImage : null);\r\n    } else if (key === '~') {\r\n      return src;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/utils/sortTags'];","import Link from 'flarum/common/components/Link';\r\nimport sortTags from 'flarum/tags/utils/sortTags';\r\n\r\nexport default function craftTags(tags) {\r\n  if (tags) {\r\n    return [sortTags(tags).map(function (tag) {\r\n      return [\r\n        <Link className=\"cardTag\"\r\n              style={{backgroundColor: tag.color()}}\r\n              href={app.route('tag', {tags: tag.slug()})}>\r\n          {tag.name()}\r\n        </Link>\r\n      ]\r\n    })];\r\n  }\r\n};\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/humanTime'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/string'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","import Component from 'flarum/common/Component';\r\nimport avatar from 'flarum/common/helpers/avatar';\r\n\r\n\r\nexport default class LastReplies extends Component {\r\n\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n    this.discussion = this.attrs.discussion;\r\n  }\r\n\r\n  view() {\r\n    const discussion = this.discussion;\r\n\r\n    // let's assume that the last 10 posts will be enough for us to identify 3 unique users\r\n    const posts = discussion.posts().splice(-10);\r\n\r\n    const filteredPosts = posts\r\n      .filter((post) => {\r\n        return !post.isHidden() && post.number() !== 1 && post.contentType() === \"comment\";\r\n      })\r\n      .sort((a, b) => b.createdAt() - a.createdAt());\r\n\r\n    const groupedUsers = filteredPosts\r\n      .map(post => post.user())\r\n      .filter((user, i, self) => {\r\n        return self.indexOf(user) === i\r\n      })\r\n      .reverse()\r\n      // last 3 users\r\n      .splice(-3);\r\n\r\n\r\n    return groupedUsers.map(user => {\r\n      return avatar(user, {className: 'Avatar--mini'})\r\n    })\r\n\r\n  }\r\n\r\n}\r\n","export default function compareTags(currentTag, priorityTag) {\r\n    if (currentTag.isChild && !priorityTag.isChild) return -1;\r\n    if (!currentTag.isChild && priorityTag.isChild) return 1;\r\n    if (currentTag.isChild && priorityTag.isChild && currentTag.parent === priorityTag.parent) return currentTag.position - priorityTag.position;\r\n    if (currentTag.isChild && priorityTag.isChild && currentTag.parent !== priorityTag.parent) return currentTag.parent - priorityTag.parent;\r\n\r\n    if (!currentTag.position && priorityTag.position) return 1;\r\n    if (currentTag.position && !priorityTag.position) return -1;\r\n    if (currentTag.position && priorityTag.position) return currentTag.position - priorityTag.position;\r\n    return currentTag.id - priorityTag.id;\r\n}","import Component from \"flarum/common/Component\";\r\nimport craftBadges from \"../utils/craftBadges\";\r\nimport getPostImage from \"../helpers/getPostImage\";\r\nimport craftTags from \"../utils/craftTags\";\r\nimport humanTime from \"flarum/common/utils/humanTime\";\r\nimport icon from \"flarum/common/helpers/icon\";\r\nimport username from \"flarum/common/helpers/username\";\r\nimport Dropdown from \"flarum/common/components/Dropdown\";\r\nimport DiscussionControls from \"flarum/forum/utils/DiscussionControls\";\r\nimport Link from \"flarum/common/components/Link\";\r\nimport { truncate } from \"flarum/common/utils/string\";\r\nimport LastReplies from \"./LastReplies\";\r\nimport compareTags from \"../helpers/compareTags\";\r\nimport isValideImageUrl from \"../helpers/isValideImageUrl\";\r\n\r\nexport default class cardItem extends Component {\r\n\toninit(vnode) {\r\n\t\tsuper.oninit(vnode);\r\n\t\tthis.discussion = this.attrs.discussion;\r\n\t}\r\n\r\n\tview() {\r\n\t\tconst discussion = this.discussion;\r\n\t\tconst settings = {};\r\n\t\tfor (const key in app.forum.data.attributes) {\r\n\t\t\tif (key.startsWith('walsgitDiscussionCards')) {\r\n\t\t\t\tlet newKey = key.replace('walsgitDiscussionCards', '');\r\n\t\t\t\tnewKey = newKey.replace(/^./, newKey.charAt(0).toLowerCase());\r\n\t\t\t\tsettings[newKey] = app.forum.data.attributes[key];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Getting & setting relevant info for 3rd party Flarum Blog extension support */\r\n\t\tconst blogActivated = app.forum.data.attributes.hasOwnProperty('blogTags');\r\n\t\tconst blogSettings = {};\r\n\t\tconst postIsBlogType = discussion.data.relationships.hasOwnProperty('blogMeta');\r\n\t\tconst blogPost = {}\r\n\t\tif(blogActivated) {\r\n\t\t\tblogSettings.tags = app.forum.attribute('blogTags');\r\n\t\t\tblogSettings.defaultImage = app.forum.attribute('blogDefaultImage');\r\n\r\n\t\t\tif(postIsBlogType) {\r\n\t\t\t\tconst blogPostsData = discussion.store.data.blogMeta[discussion.data.relationships.blogMeta.data.id];\r\n\t\t\t\tif(isValideImageUrl(blogPostsData.attribute('featuredImage'))) {\r\n\t\t\t\t\tblogPost.featuredImage = blogPostsData.attribute('featuredImage');\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst isTagPage = m.route.get().split('?')[0].startsWith('/t/');\r\n\t\tlet tagId;\r\n\t\tif (isTagPage) {\r\n\t\t\tconst slug = m.route.get().split('/t/')[1]?.split('?')[0];\r\n\t\t\ttagId = app.store.all('tags').find(t => t.slug() === slug).data.id;\r\n\t\t\tconst tag = app.store.all('tags').find(t => t.id() === tagId);\r\n\t\t\tconst tagSettings = tag ? JSON.parse(tag.data.attributes.walsgitDiscussionCardsTagSettings || '{}') : {};\r\n\t\t\tconst tagImage = tag ? tag.data.attributes.walsgitDiscussionCardsTagDefaultImage : null;\r\n\t\t\t\r\n\t\t\ttagSettings.defaultImage = tagImage;\r\n\t\t\t/* In case Flarum Blog Extension and useBlogImage are activated  */\r\n\t\t\tif(blogActivated && Number(settings.useBlogImages) === 1 && blogSettings.tags.includes(tagId)) {\r\n\t\t\t\ttagSettings.defaultImage = postIsBlogType && blogPost.featuredImage && isValideImageUrl(blogPost.featuredImage) ? blogPost.featuredImage : blogSettings.defaultImage;\r\n\t\t\t}\r\n\r\n\t\t\tfor (const key in tagSettings) {\r\n\t\t\t\tif (settings.hasOwnProperty(key) && tagSettings[key] !== settings[key] && tagSettings[key] !== null) {\r\n\t\t\t\t\tsettings[key] = tagSettings[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* On the IndexPage (all discussions) checks which default image to show based on tag priority */\r\n\t\tconst isIndexPage = m.route.get().split('?')[0] === '/';\r\n\t\tif (isIndexPage) {\r\n\t\t\tconst tags = discussion.tags();\r\n\t\t\tfor (const key in tags) {\r\n\t\t\t\tconst tagId = tags[key].id();\r\n\t\t\t\tconst isChild = tags[key].isChild();\r\n\t\t\t\tconst parent = tags[key].data.hasOwnProperty('relationships') && tags[key].parent() ? tags[key].parent()['data'].id : null;\r\n\t\t\t\tconst position = tags[key].position();\r\n\r\n\t\t\t\tlet tagCustomImg = tags[key].attribute('walsgitDiscussionCardsTagDefaultImage');\r\n\t\t\t\t/* In case Flarum Blog Extension and useBlogImage are activated  */\r\n\t\t\t\tif(blogActivated && Number(settings.useBlogImages) === 1 && blogSettings.tags.includes(tagId)) {\r\n\t\t\t\t\ttagCustomImg = postIsBlogType && blogPost.featuredImage && isValideImageUrl(blogPost.featuredImage) ? blogPost.featuredImage : blogSettings.defaultImage;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst currentTag = { id: tagId, isChild, parent, position, tagCustomImg }\r\n\t\t\t\tlet priorityTag = null;\r\n\t\t\t\tif (!settings.allowedTags.includes(tagId) || tagCustomImg === null) continue;\t\t\t\t\t\r\n\r\n\t\t\t\tif (priorityTag === null || compareTags(currentTag, priorityTag) < 0) {\r\n\t\t\t\t\tpriorityTag = { id: tagId, isChild, parent, position, tagCustomImg };\r\n\t\t\t\t\tsettings.defaultImage = tagCustomImg;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst isRead = Number(settings.markReadCards) === 1 && discussion.isRead() && app.session.user ? \"read\" : \"\";\r\n\t\tconst attrs = {};\r\n\t\tattrs.className =\r\n\t\t\t\"wrapImg\" + (Number(settings.showAuthor) === 1 ? \" After\" : \"\");\r\n\t\tconst image = getPostImage(discussion.firstPost(), settings.defaultImage, postIsBlogType);\r\n\t\tconst media = image ? (\r\n\t\t\t<img\r\n\t\t\t\tsrc={image}\r\n\t\t\t\tclassName=\"previewCardImg\"\r\n\t\t\t\talt={discussion.title()}\r\n\t\t\t\tloading=\"lazy\"\r\n\t\t\t/>\r\n\t\t) : (\r\n\t\t\t<div className=\"imgStub\" />\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tkey={discussion.id()}\r\n\t\t\t\tdata-id={discussion.id()}\r\n\t\t\t\tdata-tag-id={isTagPage ? tagId : null}\r\n\t\t\t\tclassName={\r\n\t\t\t\t\t\"CardsListItem Card \" +\r\n\t\t\t\t\tisRead +\r\n\t\t\t\t\t(discussion.isHidden() ? \" Hidden\" : \"\")\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t{DiscussionControls.controls(discussion, this).toArray().length\r\n\t\t\t\t\t? m(\r\n\t\t\t\t\t\t\tDropdown,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ticon: \"fas fa-ellipsis-v\",\r\n\t\t\t\t\t\t\t\tclassName: \"DiscussionListItem-controls\",\r\n\t\t\t\t\t\t\t\tbuttonClassName:\r\n\t\t\t\t\t\t\t\t\t\"Button Button--icon Button--flat Slidable-underneath Slidable-underneath--right\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tDiscussionControls.controls(\r\n\t\t\t\t\t\t\t\tdiscussion,\r\n\t\t\t\t\t\t\t\tthis\r\n\t\t\t\t\t\t\t).toArray()\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t: \"\"}\r\n\t\t\t\t<Link\r\n\t\t\t\t\thref={app.route.discussion(discussion, 0)}\r\n\t\t\t\t\tclassName=\"cardLink\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{Number(settings.showBadges) === 1\r\n\t\t\t\t\t\t? craftBadges(discussion.badges().toArray())\r\n\t\t\t\t\t\t: \"\"}\r\n\r\n\t\t\t\t\t<div {...attrs}>\r\n\t\t\t\t\t\t{discussion.data.attributes.hasOwnProperty('views') && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{Number(settings.showViews) === 1 &&\r\n\t\t\t\t\t\t\t\t!isNaN(discussion.views()) ? (\r\n\t\t\t\t\t\t\t\t\t<div className=\"imageLabel discussionViews\">\r\n\t\t\t\t\t\t\t\t\t\t{icon(\"fas fa-eye\", { className: \"labelIcon\" })}\r\n\t\t\t\t\t\t\t\t\t\t{discussion.views()}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{media}\r\n\r\n\t\t\t\t\t\t{Number(settings.showAuthor) === 1 ? (\r\n\t\t\t\t\t\t\t<div className=\"cardFoot\">\r\n\t\t\t\t\t\t\t\t<div className=\"Author\">\r\n\t\t\t\t\t\t\t\t\t{username(discussion.user())}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"Date\">\r\n\t\t\t\t\t\t\t\t\t{humanTime(discussion.createdAt())}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"cardTags\">\r\n\t\t\t\t\t\t{craftTags(discussion.tags())}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"cardTitle\">\r\n\t\t\t\t\t\t<h2>{discussion.title()}</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{Number(settings.previewText) === 1 && discussion.firstPost() ? (\r\n\t\t\t\t\t\t<div className=\"previewPost\">\r\n\t\t\t\t\t\t\t{blogActivated && Number(settings.useBlogSummary) === 1 && discussion.data.relationships.hasOwnProperty('blogMeta') && discussion.blogMeta().summary() !== ''\r\n\t\t\t\t\t\t\t\t? truncate(discussion.blogMeta().summary(), 150)\r\n\t\t\t\t\t\t\t\t: truncate(discussion.firstPost().contentPlain(), 150)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{Number(settings.showReplies) === 1 ? (\r\n\t\t\t\t\t\t<div className=\"cardSpacer\">\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tclassName=\"Replies\"\r\n\t\t\t\t\t\t\t\thref={app.route.discussion(\r\n\t\t\t\t\t\t\t\t\tdiscussion,\r\n\t\t\t\t\t\t\t\t\tdiscussion.lastPostNumber()\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"Left\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"Avatars\">\r\n\t\t\t\t\t\t\t\t\t\t{m(LastReplies, {\r\n\t\t\t\t\t\t\t\t\t\t\tdiscussion: discussion,\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"Repcount\">\r\n\t\t\t\t\t\t\t\t\t\t{app.translator.trans(\r\n\t\t\t\t\t\t\t\t\t\t\t\"walsgit_discussion_cards.forum.replies\",\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcount:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdiscussion.replyCount() ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"0\",\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"Arrow\">\r\n\t\t\t\t\t\t\t\t\t{icon(\"fas fa-angle-right\")}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import Component from \"flarum/common/Component\";\r\nimport craftBadges from \"../utils/craftBadges\";\r\nimport getPostImage from \"../helpers/getPostImage\";\r\nimport craftTags from \"../utils/craftTags\";\r\nimport humanTime from 'flarum/common/utils/humanTime';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport username from 'flarum/common/helpers/username';\r\nimport Dropdown from 'flarum/common/components/Dropdown';\r\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\r\nimport Link from 'flarum/common/components/Link';\r\nimport {truncate} from 'flarum/common/utils/string';\r\nimport LastReplies from './LastReplies';\r\nimport compareTags from \"../helpers/compareTags\";\r\nimport isValideImageUrl from \"../helpers/isValideImageUrl\";\r\n\r\n\r\nexport default class listItem extends Component {\r\n\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n  }\r\n\r\n  view() {\r\n    const discussion = this.attrs.discussion;\r\n    const settings = {};\r\n    for (const key in app.forum.data.attributes) {\r\n\t\t\tif (key.startsWith('walsgitDiscussionCards')) {\r\n\t\t\t\tlet newKey = key.replace('walsgitDiscussionCards', '');\r\n\t\t\t\tnewKey = newKey.replace(/^./, newKey.charAt(0).toLowerCase());\r\n\t\t\t\tsettings[newKey] = app.forum.data.attributes[key];\r\n\t\t\t}\r\n\t\t}\r\n\r\n    /* Getting & setting relevant info for 3rd party Flarum Blog support */\r\n\t\tconst blogActivated = app.forum.data.attributes.hasOwnProperty('blogTags');\r\n\t\tconst blogSettings = {};\r\n\t\tconst postIsBlogType = discussion.data.relationships.hasOwnProperty('blogMeta');\r\n\t\tconst blogPost = {}\r\n\t\tif(blogActivated) {\r\n\t\t\tblogSettings.tags = app.forum.attribute('blogTags');\r\n\t\t\tblogSettings.defaultImage = app.forum.attribute('blogDefaultImage');\r\n\r\n\t\t\tif(postIsBlogType) {\r\n\t\t\t\tconst blogPostsData = discussion.store.data.blogMeta[discussion.data.relationships.blogMeta.data.id];\r\n\t\t\t\tif(isValideImageUrl(blogPostsData.attribute('featuredImage'))) {\r\n\t\t\t\t\tblogPost.featuredImage = blogPostsData.attribute('featuredImage');\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n    const isTagPage = m.route.get().split('?')[0].startsWith('/t/');\r\n\t\tif (isTagPage) {\r\n      const slug = m.route.get().split('/t/')[1]?.split('?')[0];\r\n      const tagId = app.store.all('tags').find(t => t.slug() === slug).data.id;\r\n      const tag = app.store.all('tags').find(t => t.id() === tagId);\r\n      const tagSettings = tag ? JSON.parse(tag.data.attributes.walsgitDiscussionCardsTagSettings || '{}') : {};\r\n      const tagImage = tag ? tag.data.attributes.walsgitDiscussionCardsTagDefaultImage : null;\r\n      \r\n      tagSettings.defaultImage = tagImage;\r\n      /* In case Flarum Blog Extension and useBlogImage are activated  */\r\n      if(blogActivated && Number(settings.useBlogImages) === 1 && blogSettings.tags.includes(tagId)) {\r\n\t\t\t\ttagSettings.defaultImage = postIsBlogType && blogPost.featuredImage && isValideImageUrl(blogPost.featuredImage) ? blogPost.featuredImage : blogSettings.defaultImage;\r\n\t\t\t}\r\n\r\n      for (const key in tagSettings) {\r\n        if (settings.hasOwnProperty(key) && tagSettings[key] !== settings[key] && tagSettings[key] !== null) {\r\n          settings[key] = tagSettings[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    /* On the IndexPage (all discussions) checks which default image to show based on tag priority */\r\n\t\tconst isIndexPage = m.route.get().split('?')[0] === '/';\r\n\t\tif (isIndexPage) {\r\n\t\t\tconst tags = discussion.tags();\r\n\t\t\tfor (const key in tags) {\r\n\t\t\t\tconst tagId = tags[key].id();\r\n\t\t\t\tconst isChild = tags[key].isChild();\r\n\t\t\t\tconst parent = tags[key].data.hasOwnProperty('relationships') && tags[key].parent() ? tags[key].parent()['data'].id : null;\r\n\t\t\t\tconst position = tags[key].position();\r\n\r\n\t\t\t\tlet tagCustomImg = tags[key].attribute('walsgitDiscussionCardsTagDefaultImage');\r\n        /* In case Flarum Blog Extension and useBlogImage are activated  */\r\n\t\t\t\tif(blogActivated && Number(settings.useBlogImages) === 1 && blogSettings.tags.includes(tagId)) {\r\n\t\t\t\t\ttagCustomImg = postIsBlogType && blogPost.featuredImage && isValideImageUrl(blogPost.featuredImage) ? blogPost.featuredImage : blogSettings.defaultImage;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst currentTag = { id: tagId, isChild, parent, position, tagCustomImg }\r\n\t\t\t\tlet priorityTag = null;\r\n\t\t\t\tif (!settings.allowedTags.includes(tagId) || tagCustomImg === null)\tcontinue;\r\n\r\n\t\t\t\tif (priorityTag === null || compareTags(currentTag, priorityTag) < 0) {\r\n\t\t\t\t\tpriorityTag = { id: tagId, isChild, parent, position, tagCustomImg };\r\n\t\t\t\t\tsettings.defaultImage = tagCustomImg;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n    const isRead = Number(settings.markReadCards) === 1 && (discussion.isRead() && app.session.user) ? 'read' : '';\r\n    const attrs = {};\r\n    attrs.className = \"wrapImg\" + (Number(settings.showAuthor) === 1 ? \" After\" : '');\r\n    const image = getPostImage(discussion.firstPost(), settings.defaultImage, postIsBlogType);\r\n    const media = image\r\n      ? <img src={image}\r\n            className=\"previewCardImg\"\r\n            alt={discussion.title()}\r\n            loading=\"lazy\"/>\r\n      : <div className=\"imgStub\"/>\r\n\r\n    return (\r\n      <div key={discussion.id()}\r\n          data-id={discussion.id()}\r\n          className={\"CardsListItem List \" + isRead + (discussion.isHidden() ? \" Hidden\" : \"\")}>\r\n        {DiscussionControls.controls(discussion, this).toArray().length\r\n          ? m(Dropdown, {\r\n            icon: 'fas fa-ellipsis-v',\r\n            className: 'DiscussionListItem-controls',\r\n            buttonClassName: 'Button Button--icon Button--flat Slidable-underneath Slidable-underneath--right',\r\n          }, DiscussionControls.controls(discussion, this).toArray())\r\n          : ''}\r\n        <Link href={app.route.discussion(discussion, 0)}\r\n              className=\"cardLink\">\r\n\r\n          {Number(settings.showBadges) === 1\r\n            ? craftBadges(discussion.badges().toArray())\r\n            : ''}\r\n\r\n          <div className=\"cardGrid\">\r\n\r\n            <div className=\"rowSpan-3 colSpan\">\r\n              <div {...attrs}>\r\n                {discussion.data.attributes.hasOwnProperty('views') && (\r\n                  <>\r\n                  {Number(settings.showViews) === 1 && !isNaN(discussion.views())\r\n                    ? <div className=\"imageLabel discussionViews\">\r\n                      {icon('fas fa-eye', {className: 'labelIcon'})}\r\n                      {discussion.views()}\r\n                    </div>\r\n                    : ''}\r\n                  </>\r\n                )}\r\n                \r\n                {media}\r\n\r\n                {Number(settings.showAuthor) === 1\r\n                  ? <div className=\"cardFoot\">\r\n                    <div className=\"Author\">\r\n                      {username(discussion.user())}\r\n                    </div>\r\n                    <div className=\"Date\">\r\n                      {humanTime(discussion.createdAt())}\r\n                    </div>\r\n                  </div>\r\n                  : ''}\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"rowSpan-3 colSpan-2\">\r\n\r\n              <div className=\"flexBox\">\r\n                <div className=\"cardTitle\">\r\n                  <h2 title={discussion.title()} className=\"title\">{truncate(discussion.title(), 80)}</h2>\r\n                </div>\r\n                <div className=\"cardTags\">{craftTags(discussion.tags())}</div>\r\n              </div>\r\n\r\n              {Number(settings.previewText) === 1 && discussion.firstPost() ? (\r\n                <div className=\"previewPost\">\r\n                  {blogActivated && Number(settings.useBlogSummary) === 1 && discussion.data.relationships.hasOwnProperty('blogMeta') && discussion.blogMeta().summary() !== ''\r\n                    ? truncate(discussion.blogMeta().summary(), 150)\r\n                    : truncate(discussion.firstPost().contentPlain(), 150)\r\n                  }\r\n                </div>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n              {app.screen() === 'phone' && Number(settings.showReplies) === 1\r\n                ? <div className=\"cardSpacer\">\r\n                  <Link\r\n                    className=\"Replies\"\r\n                    href={app.route.discussion(discussion, discussion.lastPostNumber())}>\r\n                    <div className=\"Left\">\r\n                      <div className=\"Avatars\">\r\n                        {m(LastReplies, {discussion: discussion})}\r\n                      </div>\r\n                      <div className=\"Repcount\">\r\n                        {app.translator.trans('walsgit_discussion_cards.forum.replies', {count: discussion.replyCount() || '0'})}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"Arrow\">\r\n                      {icon('fas fa-angle-right')}\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n                : Number(settings.showReplies) === 1 ?\r\n                  <div className=\"imageLabel discussionReplyCount\">\r\n                    {icon('fas fa-comment', {className: 'labelIcon'})}\r\n                    {discussion.replyCount()}\r\n                  </div> : ''\r\n              }\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","import CardItem from './components/CardItem';\r\nimport ListItem from './components/ListItem';\r\nimport LastReplies from './components/LastReplies';\r\nimport craftTags from \"./utils/craftTags\";\r\nimport craftBadges from \"./utils/craftBadges\";\r\n\r\nexport default {\r\n  'walsgit/discussion/cards/components/CardItem': CardItem,\r\n  'walsgit/discussion/cards/components/ListItem': ListItem,\r\n  'walsgit/discussion/cards/components/LastReplies': LastReplies,\r\n  'walsgit/discussion/cards/utils/craftTags': craftTags,\r\n  'walsgit/discussion/cards/utils/craftBadges': craftBadges,\r\n};\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core;","import app from 'flarum/app';\r\nimport {extend, override} from 'flarum/extend';\r\nimport DiscussionList from 'flarum/forum/components/DiscussionList';\r\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\r\nimport IndexPage from 'flarum/forum/components/IndexPage';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport Placeholder from 'flarum/common/components/Placeholder';\r\nimport Button from 'flarum/common/components/Button';\r\nimport CardItem from './components/CardItem';\r\nimport ListItem from './components/ListItem';\r\n\r\napp.initializers.add('walsgit/discussion/cards', () => {\r\n\r\n  extend(DiscussionListState.prototype, 'requestParams', function (params) {\r\n    if (app.current.matches(IndexPage)) {\r\n      params.include.push(['firstPost', 'posts', 'posts.user']);\r\n    }\r\n  });\r\n\r\n  override(DiscussionList.prototype, 'view', function (original) {\r\n    const settings = {};\r\n    for (const key in app.forum.data.attributes) {\r\n      if (key.startsWith('walsgitDiscussionCards')) {\r\n        let newKey = key.replace('walsgitDiscussionCards', '');\r\n        newKey = newKey.replace(/^./, newKey.charAt(0).toLowerCase());\r\n        settings[newKey] = app.forum.data.attributes[key];\r\n      }\r\n    }\r\n    const state = this.attrs.state;\r\n    const params = state.getParams();\r\n    let loading;\r\n    if (state.isInitialLoading() || state.isLoadingNext()) {\r\n      loading = <LoadingIndicator/>;\r\n    } else if (state.hasNext()) {\r\n      loading = Button.component(\r\n        {\r\n          className: 'Button',\r\n          onclick: state.loadNext.bind(state),\r\n        },\r\n        app.translator.trans('core.forum.discussion_list.load_more_button')\r\n      );\r\n    }\r\n    if (state.isEmpty()) {\r\n      const text = app.translator.trans('core.forum.discussion_list.empty_text');\r\n      return <div className=\"DiscussionList\">{m(Placeholder, {text})}</div>;\r\n    }\r\n    const isTagPage = m.route.get().split('?')[0].startsWith('/t/');\r\n    let tag = null;\r\n    if (isTagPage) {\r\n      tag = app.store.all('tags').find(t => t.slug() === params.tags).data.id;\r\n      const tagSettings = JSON.parse(app.store.all('tags').find(t => t.slug() === params.tags).data.attributes.walsgitDiscussionCardsTagSettings);\r\n      for (const key in tagSettings) {\r\n        if (settings.hasOwnProperty(key) && tagSettings[key] !== settings[key]) {\r\n          settings[key] = tagSettings[key];\r\n        }\r\n      }\r\n    }\r\n    if (app.current.matches(IndexPage) && ((settings.allowedTags.length && settings.allowedTags.includes(tag)) || (!params.tags && Number(settings.onIndexPage) === 1))) {\r\n      return (\r\n        <div className={'DiscussionList' + (state.isSearchResults() ? ' DiscussionList--searchResults' : '')}>\r\n          <div class=\"DiscussionList-discussions flexCard\">\r\n            {state.getPages().map((pg, o) => {\r\n              return pg.items.map((discussion, i) => {\r\n                return (i < Number(settings.primaryCards) && o === 0)\r\n                  ? m(CardItem, {discussion: discussion})\r\n                  : m(ListItem, {discussion: discussion})\r\n              });\r\n            })}\r\n          </div>\r\n          <div className=\"DiscussionList-loadMore\">{loading}</div>\r\n        </div>\r\n      );\r\n\r\n    } else {\r\n      return original();\r\n    }\r\n  })\r\n}, -1);\r\n\r\n\r\n// Expose compat API\r\nimport extCompat from './compat';\r\nimport {compat} from '@flarum/core/forum';\r\n\r\nObject.assign(compat, extCompat);\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","_inheritsLoose","create","constructor","craftBadges","badges","length","m","map","badge","Tooltip","text","attrs","label","position","type","icon","isValideImageUrl","url","parsedUrl","startsWith","URL","_unused","extension","pathname","split","pop","toLowerCase","includes","getPostImage","post","image","isblogPost","assetImage","app","forum","attribute","src","exec","contentHtml","craftTags","tags","sortTags","tag","Link","className","style","backgroundColor","color","href","route","slug","name","LastReplies","_Component","apply","arguments","_proto","oninit","vnode","this","discussion","view","posts","splice","filter","isHidden","number","contentType","sort","b","createdAt","user","i","self","indexOf","reverse","avatar","Component","compareTags","currentTag","priorityTag","isChild","parent","id","cardItem","settings","data","attributes","newKey","replace","charAt","blogActivated","blogSettings","postIsBlogType","relationships","blogPost","defaultImage","blogPostsData","store","blogMeta","featuredImage","tagId","isTagPage","_m$route$get$split$","all","find","tagSettings","JSON","parse","walsgitDiscussionCardsTagSettings","tagImage","walsgitDiscussionCardsTagDefaultImage","Number","useBlogImages","tagCustomImg","allowedTags","isRead","markReadCards","session","showAuthor","firstPost","media","alt","title","loading","DiscussionControls","toArray","Dropdown","buttonClassName","showBadges","'['","showViews","isNaN","views","username","humanTime","previewText","useBlogSummary","summary","truncate","contentPlain","showReplies","lastPostNumber","translator","trans","count","replyCount","listItem","screen","CardItem","ListItem","add","extend","DiscussionListState","params","matches","IndexPage","include","push","override","DiscussionList","original","state","getParams","isInitialLoading","isLoadingNext","LoadingIndicator","hasNext","Button","onclick","loadNext","isEmpty","Placeholder","onIndexPage","isSearchResults","class","getPages","pg","items","primaryCards","assign","extCompat"],"sourceRoot":""}